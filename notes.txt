612

function keyword
--------------------------------

keyword: function

function name(parameters) { 
					statements;
				  	return stuff;
				}

calling function: name(arguments);

When the function has no parameters the given argument gets ignored

There is NO function overloading in JS! It takes the last function declared.

No return statememnt means NO return in JS
const func = () => 1; // automaticaly adds return statements

const name = () => {statements;} // Lambda
=> is a replacememnt of function keyword
(input) => (function) // returns function, therefore can be given a name 

functions can be in an array:
const funs = [null, fun1, fun2];
funs[2]() // is fun2()

passing function to function --> higher order function


        function doit(whatToDo) {
            return function bla(arg) { return whatToDo(arg); }
        }

        is same as:

        const doit2 = callme => arg => callme(arg) ;
        
     	the curryied style:
     	passing arguments step by step
     	const example = doit2(fun1)(10);

--------------------------------
named functions
--------------------------------




--------------------------------
function references
--------------------------------




--------------------------------
calling functions
--------------------------------



--------------------------------
too many, too few argumentswhen to return, missing returnsstatements vs. expressions
--------------------------------